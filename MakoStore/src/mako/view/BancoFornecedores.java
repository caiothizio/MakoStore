/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mako.view;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mako.controller.FornecedorDAO;
import mako.model.Fornecedor;

/**
 *
 * @author CaioThizio
 */
public class BancoFornecedores extends javax.swing.JFrame {

    private Fornecedor f = new Fornecedor();

    /**
     * Creates new form CadastroProduto
     */
    public BancoFornecedores() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupFornecedor = new javax.swing.ButtonGroup();
        buttonGrouptipoPes = new javax.swing.ButtonGroup();
        jTextField7 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        painelFornecedor = new javax.swing.JPanel();
        labelFornecedor = new javax.swing.JLabel();
        painelCamposFornecedor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textID = new javax.swing.JTextField();
        buttonID = new javax.swing.JButton();
        textNome = new javax.swing.JTextField();
        buttonNome = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFornecedores = new javax.swing.JTable();
        buttonTodos = new javax.swing.JButton();
        buttonSair = new javax.swing.JButton();
        buttonApagar = new javax.swing.JButton();
        buttonAtt = new javax.swing.JButton();
        tfID = new javax.swing.JTextField();
        tfNome = new javax.swing.JTextField();
        tfEnd = new javax.swing.JTextField();
        tfCont = new javax.swing.JTextField();
        tfPagina = new javax.swing.JTextField();
        buttonCancelar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tfObs = new javax.swing.JTextArea();
        labelAtt = new javax.swing.JLabel();
        buttonAlterar = new javax.swing.JButton();
        radioFisica = new javax.swing.JRadioButton();
        radioJuridica = new javax.swing.JRadioButton();
        radioML = new javax.swing.JRadioButton();
        radioAli = new javax.swing.JRadioButton();
        radioOutros = new javax.swing.JRadioButton();
        radioWish = new javax.swing.JRadioButton();
        labelID = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        labelEndereco = new javax.swing.JLabel();
        labelCont = new javax.swing.JLabel();
        labelPag = new javax.swing.JLabel();
        labelTipo = new javax.swing.JLabel();
        labelPes = new javax.swing.JLabel();
        labelPes1 = new javax.swing.JLabel();

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Fornecedor");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        painelFornecedor.setBackground(new java.awt.Color(0, 204, 204));
        painelFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        painelFornecedor.setName("Banco de Fornecedores"); // NOI18N

        labelFornecedor.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        labelFornecedor.setText("Fornecedores");

        painelCamposFornecedor.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel1.setText("ID:");

        jLabel2.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel2.setText("Nome:");

        buttonID.setText("Busca ID");
        buttonID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonIDMouseClicked(evt);
            }
        });

        buttonNome.setText("Busca Nome");
        buttonNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonNomeMouseClicked(evt);
            }
        });

        tabelaFornecedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelaFornecedores.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(tabelaFornecedores);

        buttonTodos.setText("Mostrar Todos");
        buttonTodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonTodosMouseClicked(evt);
            }
        });

        buttonSair.setText("Sair");
        buttonSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSairMouseClicked(evt);
            }
        });
        buttonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSairActionPerformed(evt);
            }
        });

        buttonApagar.setText("Apagar Registro");
        buttonApagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonApagarMouseClicked(evt);
            }
        });

        buttonAtt.setText("Atualizar");
        buttonAtt.setEnabled(false);
        buttonAtt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAttMouseClicked(evt);
            }
        });

        tfID.setUI(new mako.controller.Watermark("ID", true));
        tfID.setEnabled(false);

        tfNome.setUI(new mako.controller.Watermark("Nome", true));
        tfNome.setEnabled(false);

        tfEnd.setUI(new mako.controller.Watermark("Endereço", true));
        tfEnd.setEnabled(false);

        tfCont.setUI(new mako.controller.Watermark("Contato", true));
        tfCont.setEnabled(false);

        tfPagina.setUI(new mako.controller.Watermark("CPF/CNPJ", true));
        tfPagina.setEnabled(false);

        buttonCancelar.setText("Cancelar");
        buttonCancelar.setEnabled(false);
        buttonCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonCancelarMouseClicked(evt);
            }
        });

        tfObs.setColumns(20);
        tfObs.setLineWrap(true);
        tfObs.setRows(5);
        tfObs.setEnabled(false);
        jScrollPane3.setViewportView(tfObs);

        labelAtt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelAtt.setText("Atualizar");

        buttonAlterar.setText("Alterar Registro");
        buttonAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAlterarMouseClicked(evt);
            }
        });

        buttonGrouptipoPes.add(radioFisica);
        radioFisica.setText("Física");
        radioFisica.setEnabled(false);

        buttonGrouptipoPes.add(radioJuridica);
        radioJuridica.setText("Jurídica");
        radioJuridica.setEnabled(false);

        buttonGroupFornecedor.add(radioML);
        radioML.setText("ML");
        radioML.setEnabled(false);
        radioML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMLActionPerformed(evt);
            }
        });

        buttonGroupFornecedor.add(radioAli);
        radioAli.setText("Ali");
        radioAli.setEnabled(false);
        radioAli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAliActionPerformed(evt);
            }
        });

        buttonGroupFornecedor.add(radioOutros);
        radioOutros.setText("Outros");
        radioOutros.setEnabled(false);

        buttonGroupFornecedor.add(radioWish);
        radioWish.setText("Wish");
        radioWish.setEnabled(false);

        labelID.setText("ID:");

        labelNome.setText("Nome:");

        labelEndereco.setText("Endereço:");

        labelCont.setText("Contato:");

        labelPag.setText("Página:");

        labelTipo.setText("Tipo:");

        labelPes.setText("Pessoa:");

        labelPes1.setText("Obs:");

        javax.swing.GroupLayout painelCamposFornecedorLayout = new javax.swing.GroupLayout(painelCamposFornecedor);
        painelCamposFornecedor.setLayout(painelCamposFornecedorLayout);
        painelCamposFornecedorLayout.setHorizontalGroup(
            painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                        .addComponent(buttonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127)
                        .addComponent(buttonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonApagar))
                    .addComponent(buttonTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonID)
                        .addGap(73, 73, 73)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonNome)))
                .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCamposFornecedorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPes, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelTipo, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                                .addComponent(radioAli)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioML)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioWish)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioOutros))
                            .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                                .addComponent(radioJuridica)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioFisica)))
                        .addGap(40, 40, 40))
                    .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                                .addComponent(labelPes1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCamposFornecedorLayout.createSequentialGroup()
                                .addComponent(buttonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonAtt, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCamposFornecedorLayout.createSequentialGroup()
                                .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelEndereco)
                                    .addComponent(labelCont)
                                    .addComponent(labelPag))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfPagina, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfCont, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfEnd)))
                            .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(labelID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                                        .addComponent(labelAtt)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                                        .addComponent(labelNome)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfNome)))))))
                .addContainerGap())
        );
        painelCamposFornecedorLayout.setVerticalGroup(
            painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAtt)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonID)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNome))
                .addGap(18, 18, 18)
                .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelID)
                            .addComponent(labelNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelEndereco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCont))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfPagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPag))
                        .addGap(18, 18, 18)
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioAli)
                            .addComponent(radioML)
                            .addComponent(radioWish)
                            .addComponent(radioOutros)
                            .addComponent(labelTipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioFisica)
                            .addComponent(radioJuridica)
                            .addComponent(labelPes))
                        .addGap(18, 18, 18)
                        .addComponent(labelPes1)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCamposFornecedorLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonTodos)))
                .addGap(26, 26, 26)
                .addGroup(painelCamposFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonApagar)
                    .addComponent(buttonSair)
                    .addComponent(buttonAlterar)
                    .addComponent(buttonCancelar)
                    .addComponent(buttonAtt))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelFornecedorLayout = new javax.swing.GroupLayout(painelFornecedor);
        painelFornecedor.setLayout(painelFornecedorLayout);
        painelFornecedorLayout.setHorizontalGroup(
            painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCamposFornecedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelFornecedorLayout.createSequentialGroup()
                .addGap(388, 388, 388)
                .addComponent(labelFornecedor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelFornecedorLayout.setVerticalGroup(
            painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFornecedorLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(labelFornecedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelCamposFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(painelFornecedor);
        painelFornecedor.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonTodosMouseClicked
        try {
            mostraDados(FornecedorDAO.getAllFornecedores());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro SQL ao montar tabela: " + ex, "Erro ao mostrar tabela", 0);
        }
    }//GEN-LAST:event_buttonTodosMouseClicked

    private void buttonIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonIDMouseClicked
        try {
            mostraDados(FornecedorDAO.getFornecedorById(textID.getText()));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro SQL ao montar tabela: " + ex, "Erro ao mostrar tabela", 0);
        }
    }//GEN-LAST:event_buttonIDMouseClicked

    private void buttonNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonNomeMouseClicked
        try {
            mostraDados(FornecedorDAO.getFornecedorByName(textNome.getText()));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro SQL ao montar tabela: " + ex, "Erro ao mostrar tabela", 0);
        }
    }//GEN-LAST:event_buttonNomeMouseClicked

    private void buttonSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSairMouseClicked
        this.dispose();
    }//GEN-LAST:event_buttonSairMouseClicked

    private void buttonApagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonApagarMouseClicked
        int row = tabelaFornecedores.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um registro na tabela para ser apagado.", "Selecionar registro", 0);
            return;
        }

        Object idObj = tabelaFornecedores.getValueAt(row, 0);
        String id = idObj.toString();

        if (JOptionPane.showConfirmDialog(null, "Tem certeza que gostaria de apagar o fornecedor de id " + id + "?", "Apagar Fornecedor", JOptionPane.YES_NO_OPTION) != 0) {
            return;
        }

        if (!FornecedorDAO.deleteFornecedor(id)) {
            JOptionPane.showMessageDialog(null, "Erro de deleção.", "Erro de deleção", 0);
        } else {
            JOptionPane.showMessageDialog(null, "Registro deletado com sucesso.", "Deletar registro", -1);

            try {
                mostraDados(FornecedorDAO.getAllFornecedores());
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro SQL ao montar tabela: " + ex, "Erro ao mostrar tabela", 0);
            }
        }

    }//GEN-LAST:event_buttonApagarMouseClicked

    private void buttonAttMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAttMouseClicked
        int row = tabelaFornecedores.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um registro na tabela para ser apagado.", "Selecionar registro", 0);
            return;
        }

        Object idObj = tabelaFornecedores.getValueAt(row, 0);
        String oldId = idObj.toString();

        String id = tfID.getText();
        String nome = tfNome.getText();
        String endereco = tfEnd.getText();
        String contato = tfCont.getText();
        String pagina = tfPagina.getText();
        String tipo = "";
        if (radioAli.isSelected()) {
            tipo = "AliExpress";
        }

        if (radioML.isSelected()) {
            tipo = "Mercado Livre";
        }

        if (radioWish.isSelected()) {
            tipo = "Wish";
        }

        if (radioOutros.isSelected()) {
            tipo = "Outros";
        }

        String tipopes = "";

        if (radioFisica.isSelected()) {
            tipopes = "Pessoa Física";
        }

        if (radioJuridica.isSelected()) {
            tipopes = "Pessoa Jurídica";
        }
        String obs = tfObs.getText();

        boolean resp = FornecedorDAO.updateFornecedor(id, nome, endereco, contato, pagina, tipo, tipopes, obs, oldId);

        if (!resp) {
            JOptionPane.showMessageDialog(null, "Erro de atualização.", "Erro de atualização", 0);
        } else {
            JOptionPane.showMessageDialog(null, "Registro atualizado com sucesso.", "Atualizar registro", -1);

            tfID.setText("");
            tfNome.setText("");
            tfEnd.setText("");
            tfCont.setText("");
            tfPagina.setText("");
            tfObs.setText("");

            tfID.setEnabled(false);
            tfNome.setEnabled(false);
            tfEnd.setEnabled(false);
            tfCont.setEnabled(false);
            tfPagina.setEnabled(false);
            tfObs.setEnabled(false);
            buttonCancelar.setEnabled(false);
            buttonAtt.setEnabled(false);
            radioML.setEnabled(false);
            radioWish.setEnabled(false);
            radioAli.setEnabled(false);
            radioOutros.setEnabled(false);
            radioFisica.setEnabled(false);
            radioJuridica.setEnabled(false);

            buttonGroupFornecedor.clearSelection();
            buttonGrouptipoPes.clearSelection();

            try {
                mostraDados(FornecedorDAO.getAllFornecedores());
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro SQL ao montar tabela: " + ex, "Erro ao mostrar tabela", 0);
            }
        }
    }//GEN-LAST:event_buttonAttMouseClicked

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void buttonCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCancelarMouseClicked
        tfID.setText("");
        tfNome.setText("");
        tfEnd.setText("");
        tfCont.setText("");
        tfPagina.setText("");
        tfObs.setText("");

        tfID.setEnabled(false);
        tfNome.setEnabled(false);
        tfEnd.setEnabled(false);
        tfCont.setEnabled(false);
        tfPagina.setEnabled(false);
        tfObs.setEnabled(false);
        radioML.setEnabled(false);
        radioWish.setEnabled(false);
        radioAli.setEnabled(false);
        radioOutros.setEnabled(false);
        radioFisica.setEnabled(false);
        radioJuridica.setEnabled(false);
        buttonCancelar.setEnabled(false);
        buttonAtt.setEnabled(false);

        buttonGroupFornecedor.clearSelection();
        buttonGrouptipoPes.clearSelection();
    }//GEN-LAST:event_buttonCancelarMouseClicked

    private void buttonAlterarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAlterarMouseClicked
        int row = tabelaFornecedores.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um registro na tabela para ser apagado.", "Selecionar registro", 0);
            return;
        }

        Object idObj = tabelaFornecedores.getValueAt(row, 0);
        String id = idObj.toString();

        try {
            preencheCampos(id);
        } catch (SQLException ex) {
            Logger.getLogger(BancoFornecedores.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonAlterarMouseClicked

    private void radioAliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioAliActionPerformed

    private void radioMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioMLActionPerformed

    private void buttonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSairActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSairActionPerformed

    public void preencheCampos(String id) throws SQLException {
        ResultSet rs = FornecedorDAO.getFornecedorById(id);
        ResultSetMetaData rsmd = rs.getMetaData();
        ArrayList<String> reg = new ArrayList<>();

        rs.next();

        tfID.setEnabled(true);
        tfNome.setEnabled(true);
        tfEnd.setEnabled(true);
        tfCont.setEnabled(true);
        tfPagina.setEnabled(true);
        tfObs.setEnabled(true);
        radioFisica.setEnabled(true);
        radioJuridica.setEnabled(true);
        radioAli.setEnabled(true);
        radioML.setEnabled(true);
        radioWish.setEnabled(true);
        radioOutros.setEnabled(true);
        buttonCancelar.setEnabled(true);
        buttonAtt.setEnabled(true);

        do {
            reg = ProximoRegistro(rs, rsmd);
        } while (rs.next());

        tfID.setText(reg.get(0));
        tfNome.setText(reg.get(1));
        tfEnd.setText(reg.get(2));
        tfCont.setText(reg.get(3));
        tfPagina.setText(reg.get(4));
        String pes = reg.get(6);
        String tipo = reg.get(5);
        tfObs.setText(reg.get(7));
        if (pes.equals("Pessoa Física")) {
            radioFisica.setSelected(true);
        } else {
            radioJuridica.setSelected(true);
        }

        switch (tipo) {
            case "AliExpress":
                radioAli.setSelected(true);
                break;
            case "Mercado Livre":
                radioML.setSelected(true);
                break;
            case "Wish":
                radioWish.setSelected(true);
                break;
            case "Outros":
                radioOutros.setSelected(true);
                break;
        }

    }

    public void mostraDados(ResultSet rs) throws SQLException {

        if (!rs.first()) {
            JOptionPane.showMessageDialog(this, "Não há dados na tabela.");
            DefaultTableModel tableModel = new DefaultTableModel(0, 0);

            tabelaFornecedores.setModel(tableModel);
            return;
        }

        ArrayList<String> cab = new ArrayList<>();
        ArrayList<String> reg = new ArrayList<>();
        ArrayList<ArrayList<String>> regs = new ArrayList<>();

        try {

            ResultSetMetaData rsmd = rs.getMetaData();
            for (int i = 1; i <= rsmd.getColumnCount(); i++) {
                cab.add(rsmd.getColumnName(i));
            }
            // obtem dados da linha
            do {
                reg = ProximoRegistro(rs, rsmd);
                regs.add(reg);
            } while (rs.next());

            String col[] = new String[cab.size()];

            for (int i = 0; i < cab.size(); i++) {
                col[i] = cab.get(i);
            }

            DefaultTableModel tableModel = new DefaultTableModel(col, 0);

            tabelaFornecedores.setModel(tableModel);

            Object[] objs = new Object[cab.size()];

            for (ArrayList<String> array : regs) {
                for (String valor : array) {
                    objs[array.indexOf(valor)] = valor;
                }
                tableModel.addRow(objs);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao exibir tabela: " + e, "Erro tabela", 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao montar tabela: \n\n" + e, "Erro montagem", 0);
        }

    }

    private ArrayList<String> ProximoRegistro(ResultSet rs, ResultSetMetaData rsmd) throws SQLException {
        ArrayList<String> registro = new ArrayList<>();
        for (int i = 1; i <= rsmd.getColumnCount(); i++) {

            if (rsmd.getColumnType(i) == Types.VARCHAR || rsmd.getColumnClassName(i).equalsIgnoreCase("java.lang.String")) {//para string
                registro.add(rs.getString(i));
            } else if (rsmd.getColumnType(i) == Types.INTEGER) {
                registro.add(Integer.toString(rs.getInt(i)));
            } else if (rsmd.getColumnType(i) == Types.DOUBLE) {
                registro.add(Double.toString(rs.getDouble(i)));
            } else {

            }
        }
        return registro;
    }

    public void preencheFields() {

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAlterar;
    private javax.swing.JButton buttonApagar;
    private javax.swing.JButton buttonAtt;
    private javax.swing.JButton buttonCancelar;
    private javax.swing.ButtonGroup buttonGroupFornecedor;
    private javax.swing.ButtonGroup buttonGrouptipoPes;
    private javax.swing.JButton buttonID;
    private javax.swing.JButton buttonNome;
    private javax.swing.JButton buttonSair;
    private javax.swing.JButton buttonTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JLabel labelAtt;
    private javax.swing.JLabel labelCont;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelFornecedor;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelPag;
    private javax.swing.JLabel labelPes;
    private javax.swing.JLabel labelPes1;
    private javax.swing.JLabel labelTipo;
    private javax.swing.JPanel painelCamposFornecedor;
    private javax.swing.JPanel painelFornecedor;
    private javax.swing.JRadioButton radioAli;
    private javax.swing.JRadioButton radioFisica;
    private javax.swing.JRadioButton radioJuridica;
    private javax.swing.JRadioButton radioML;
    private javax.swing.JRadioButton radioOutros;
    private javax.swing.JRadioButton radioWish;
    private javax.swing.JTable tabelaFornecedores;
    private javax.swing.JTextField textID;
    private javax.swing.JTextField textNome;
    private javax.swing.JTextField tfCont;
    private javax.swing.JTextField tfEnd;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextArea tfObs;
    private javax.swing.JTextField tfPagina;
    // End of variables declaration//GEN-END:variables
}
